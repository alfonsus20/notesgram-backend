// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  email      String  @unique
  password   String?
  name       String
  username   String? @unique
  google_id  String? @unique
  avatar_url String?
  coins      Int     @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts      Post[]
  followers  Follows[] @relation("followers")
  followings Follows[] @relation("followings")

  @@map("users")
}

model Post {
  id      Int    @id @default(autoincrement())
  caption String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
  userId    Int

  note Note?

  @@map("posts")
}

model Note {
  id        Int      @id @default(autoincrement())
  title     String
  price     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  note_pictures NotePictures[]
  post          Post           @relation(fields: [postId], references: [id])
  postId        Int            @unique

  @@map("notes")
}

model NotePictures {
  id          Int      @id @default(autoincrement())
  picture_url String
  note        Note     @relation(fields: [noteId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  noteId      Int

  @@map("note_pictures")
}

model Follows {
  id          Int @id @default(autoincrement())
  followerId  Int
  followingId Int

  follower  User     @relation("followers", fields: [followerId], references: [id])
  following User     @relation("followings", fields: [followingId], references: [id])
  createdAt DateTime @default(now())

  @@map("follows")
}
